 local lume = require("lume")

 local function cycle(sprite)
 local len = #sprite.sprites
 if (sprite.idx == len) then return 1 else

 return (1 + sprite.idx) end end



















































































































































































































 local function make_sprite(sprites, anim_timeout, timer) assert((nil ~= timer), string.format("Missing argument %s on %s:%s", "timer", "lib.fnl", 9)) assert((nil ~= anim_timeout), string.format("Missing argument %s on %s:%s", "anim-timeout", "lib.fnl", 9)) assert((nil ~= sprites), string.format("Missing argument %s on %s:%s", "sprites", "lib.fnl", 9)) return {["default-timeout"] = anim_timeout, ["next-timeout"] = (timer + anim_timeout), idx = 1, sprites = sprites} end local function current_sprite(sprite) return sprite.sprites[sprite.idx] end local function animate(sprite, timer) if (timer > sprite["next-timeout"]) then sprite.idx = cycle(sprite) sprite["next-timeout"] = (sprite["next-timeout"] + sprite["default-timeout"]) return nil end end return {["current-sprite"] = current_sprite, ["make-sprite"] = make_sprite, animate = animate}
